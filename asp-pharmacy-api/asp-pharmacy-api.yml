openapi: 3.0.1
info:
  title: ASP Pharmacy API
  version: "1.1"
  description: API for requesting resources from the ASP
  contact:
    name: Trifork
servers:
  - url: https://test1.apoteksapp.dk/asp/pharmacy
tags:
  - name: pharmacy
    description: ASP Pharmacy API
  - name: drug-package
    description: Operations related to drug packages
  - name: configurations
    description: Operations related to the configurations of pharmacies
paths:
  /api/v1/pharmacy/{pharmacyNumber}/getorders:
    post:
      tags:
        - pharmacy
      summary: Get orders
      description: Fetches a list of orders for the specified CPR
      operationId: getOrders
      parameters:
        - name: createdSince
          in: query
          description: Only include orders created since the specified time
          required: false
          schema:
            type: string
            format: date-time
          example: 2020-06-21T01:23:45.123Z
        - name: limit
          in: query
          description: "Max number of results (max 50, default 10)"
          required: false
          schema:
            type: integer
            format: int32
            default: 10
          example: 5
        - name: orderStatus
          in: query
          description: Only include orders with the specified status
          required: false
          schema:
            type: string
            enum:
              - APPROVED
              - PACKAGED
              - READY_FOR_PICKUP
              - SENT
              - DELIVERED
              - CANCELLED
          example: READY_FOR_PICKUP
        - name: pharmacyNumber
          in: path
          description: 5-digit pharmacy number
          required: true
          schema:
            pattern: "^\\d{5}$"
            type: string
          example: "00300"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CPRDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "403":
          description: Missing rights to make requests regarding the specified pharmacy number
  /api/v1/pharmacy/{pharmacyNumber}/getuserconsent:
    post:
      tags:
        - pharmacy
      summary: Get user consents
      description: Fetches a list of the consents that the specified user has accepted
      operationId: getConsent
      parameters:
        - name: pharmacyNumber
          in: path
          description: 5-digit pharmacy number
          required: true
          schema:
            pattern: "^\\d{5}$"
            type: string
          example: "00300"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CPRDTO'
        required: true
      responses:
        "200":
          description: The fetched consents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentsDTO'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "403":
          description: "Missing rights to make requests regarding the specified pharmacy
          number or the specified pharmacy does not have rights to make requests
          regarding the specified CPR"
  /api/v1/pharmacy/{pharmacyNumber}/getuserinfo:
    post:
      tags:
        - pharmacy
      summary: Get user information
      description: Fetches information about a user and their use of the app
      operationId: getUserInfo
      parameters:
        - name: includeConsent
          in: query
          description: Include consents that the user has agreed to
          required: false
          schema:
            type: boolean
            default: false
          example: true
        - name: pharmacyNumber
          in: path
          description: 5-digit pharmacy number
          required: true
          schema:
            pattern: "^\\d{5}$"
            type: string
          example: "00300"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CPRDTO'
        required: true
      responses:
        "200":
          description: The fetched information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoDTO'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "403":
          description: Missing rights to make requests regarding the specified pharmacy number
  /api/v1/pharmacy/{pharmacyNumber}/order/{orderId}:
    put:
      tags:
        - pharmacy
      summary: Update order
      description: Updates the status of the specified order
      operationId: updateOrderStatus
      parameters:
        - name: orderId
          in: path
          description: Order ID
          required: true
          schema:
            type: string
          example: "1234"
        - name: pharmacyNumber
          in: path
          description: 5-digit pharmacy number
          required: true
          schema:
            pattern: "^\\d{5}$"
            type: string
          example: "00300"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusDTO'
        required: true
      responses:
        "204":
          description: OK
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "403":
          description: "Missing rights to make requests regarding the specified pharmacy
          number or the specified pharmacy does not have rights to make requests
          regarding the specified order ID"
  /api/v1/drug-packages/{packageNumber}/nearby-stock:
    post:
      tags:
        - drug-package
      operationId: getDrugPackageNearbyStock
      summary: Look up pharmacies with a specific drug package in stock
      description: "Find the nearest up to five pharmacies that have the specified drug package in stock and
      the back order status of the drug package at its distributors.
      The pharmacies are ordered by their distance to the pharmacy specified in the request."
      parameters:
        - name: packageNumber
          description: Number of the drug package to look up stock status for
          required: true
          in: path
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 999999
          example: 522003
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrugPackageStockCountRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugPackageStockCountResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /api/v1/configurations:
    post:
      tags:
        - configurations
      operationId: getConfigurations
      summary: Look up the configurations of all pharmacies
      description: Retrieve a list of the configuration of all pharmacies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationsResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
components:
  schemas:
    ApiError:
      required:
        - errorCode
        - message
      type: object
      properties:
        errorCode:
          type: string
          description: An identifiable error code
          example: APP_100
        message:
          type: string
          description: A description of the error
          example: Invalid format of id
    CPRDTO:
      required:
        - cpr
      type: object
      properties:
        cpr:
          pattern: "^\\d{10}$"
          type: string
          description: CPR of the citizen (no dash)
          example: "1507502756"
    ConsentDTO:
      required:
        - consentDateTime
        - fullConsentText
        - heading
        - id
      type: object
      properties:
        id:
          maxLength: 50
          type: string
          description: ID of the consent
          example: ST-12
        heading:
          maxLength: 50
          type: string
          description: Heading of the consent
          example: Your privacy
        fullConsentText:
          maxLength: 65535
          type: string
          description: The contents of the consent
          example: ' I hereby give my permission to...'
        consentDateTime:
          type: string
          description: The point in time at which the citizen gave their consent
          format: date-time
          example: 2020-10-22T09:35:00Z
      description: A list of accepted consents
    ConsentsDTO:
      required:
        - consents
      type: object
      properties:
        consents:
          type: array
          description: A list of accepted consents
          items:
            $ref: '#/components/schemas/ConsentDTO'
    DeliveryInformation:
      required:
        - deliveryType
        - deliveryName
        - deliveryAddress
        - deliveryZip
        - deliveryCity
      type: object
      properties:
        deliveryType:
          type: string
          description: Type of the delivery
          enum:
            - GLS
            - GLS_TO_DOOR
            - POSTNORD
            - POSTNORD_TO_DOOR
            - PHARMACY_DELIVERY
            - PHARMACY_PICKUP
            - DELIVERY_LOCATION_PICKUP
        deliveryPrice:
          type: integer
          description: Price of delivery in ører (1/100 DKK)
          format: int64
          example: 1500
        parcelShopNumber:
          maxLength: 20
          type: string
          description: ID of the pick-up-point
          example: "96606"
        deliveryName:
          maxLength: 100
          type: string
          description: Name of the recipient, parcel shop, pharmacy or delivery location chosen for the order
          example: Egon Olsen
        deliveryAddress:
          maxLength: 100
          type: string
          description: Address of the recipient without city and zip
          example: Private road 42
        deliveryZip:
          maxLength: 10
          type: string
          description: Zip/postcode of the recipient
          example: "4200"
        deliveryCity:
          maxLength: 100
          type: string
          description: City of the recipient
          example: Bysted
      description: Information regarding the delivery of the order
    GetOrdersResponse:
      required:
        - orders
      type: object
      properties:
        orders:
          type: array
          description: List of orders
          items:
            $ref: '#/components/schemas/Order'
    Order:
      required:
        - patient
        - orderedBy
        - email
        - phoneNumber
        - orderId
        - orderEntries
        - orderStatus
        - paymentMethod
        - deliveryInformation
        - createdDateTime
      type: object
      properties:
        patient:
          $ref: '#/components/schemas/PatientDTO'
        orderedBy:
          $ref: '#/components/schemas/OrdererPersonDTO'
        paymentBy:
          $ref: '#/components/schemas/PayingPersonDTO'
        email:
          maxLength: 100
          type: string
          description: Email-address of the contact person for the order
          example: me@mydomain.com
        phoneNumber:
          maxLength: 12
          type: string
          description: Phone number of the contact person for the order
          example: +45 33767600
        orderId:
          maxLength: 20
          type: string
          description: ID of the order
          example: "1234"
        orderEntries:
          type: array
          description: Individual packages in the order
          items:
            $ref: '#/components/schemas/OrderEntry'
        orderStatus:
          type: string
          description: Status of the order
          example: SENT
          enum:
            - APPROVED
            - PACKAGED
            - READY_FOR_PICKUP
            - SENT
            - DELIVERED
            - CANCELLED
        paymentMethod:
          type: string
          description: Method by which the order was paid
          example: BY_AGREEMENT
          enum:
            - BY_AGREEMENT
            - BY_PICKUP
        deliveryInformation:
          $ref: '#/components/schemas/DeliveryInformation'
        createdDateTime:
          type: string
          format: date-time
          description: Time at which the order was placed by the user
          example: 2020-06-21T01:23:45.123Z
      description: List of orders
    OrderEntry:
      required:
        - fmkOrderId
        - packageCount
        - packageNumber
      type: object
      properties:
        fmkOrderId:
          maxLength: 20
          type: integer
          description: ID of the order in FMK
          format: int64
          example: 1234
        packageNumber:
          maxLength: 6
          type: integer
          description: Package number of the product
          format: int64
          example: 504878
        packageCount:
          maxLength: 10
          type: integer
          description: Quantity of the specified package number
          format: int64
          example: 1
      description: Individual packages in the order
    UpdateOrderStatusDTO:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: New order status
          example: CANCELLED
          enum:
            - APPROVED
            - PACKAGED
            - READY_FOR_PICKUP
            - SENT
            - DELIVERED
            - CANCELLED
        statusRemark:
          maxLength: 100
          type: string
          description: Comment about the order status.
          example: Cancelled by citizen' request
    UserInfoDTO:
      required:
        - appUser
        - favouritePharmacy
      type: object
      properties:
        appUser:
          type: boolean
          description: Whether the citizen is a registered user of the app or not
          example: true
        favouritePharmacy:
          type: string
          description: YES if the user has marked the requesting pharmacy as their
            favourite. NO if the user does not have a favourite pharmacy. OTHER if
            the user has another pharmacy marked as their favourite
          example: "YES"
          enum:
            - "YES"
            - "NO"
            - OTHER
        favouritePharmacyNumber:
          maxLength: 5
          type: string
          description: Pharmacy number of the pharmacy that the user has marked as
            their favourite. Only present if favouritePharmacy is YES.
          example: "00300"
        consentList:
          type: array
          description: A list of accepted consents
          items:
            $ref: '#/components/schemas/ConsentDTO'
    PatientDTO:
      description: "A person who is a patient that receives the effectuation of an order."
      allOf:
        - $ref: "#/components/schemas/PersonInformationDTO"
    OrdererPersonDTO:
      description: "A person who placed an order."
      allOf:
        - $ref: "#/components/schemas/PersonInformationDTO"
    PayingPersonDTO:
      description: "A person who is paying for an order."
      allOf:
        - $ref: "#/components/schemas/PersonInformationDTO"
    PersonInformationDTO:
      type: object
      required:
        - cpr
        - isNameProtected
      properties:
        cpr:
          pattern: "^\\d{10}$"
          type: string
          description: "CPR of the person (no dash)"
          example: "1507502756"
        name:
          type: string
          maxLength: 100
          description: "Full name of the person. Is required if isNameProtected is `false`. May be present even if
          isNameProtected is `true`."
          example: "Kjeld Jensen"
        isNameProtected:
          type: boolean
          description: "Is `true` if the person has name protection."
          example: false
    DrugPackageStockCountRequest:
      description: Request for drug package stock status on pharmacies near the specified one
      type: object
      required:
        - pharmacyNumber
      properties:
        pharmacyNumber:
          description: 5-digit pharmacy number of the pharmacy to center the results around
          type: string
          maxLength: 5
          pattern: "^\\d{5}$"
          example: "00300"
    DrugPackageStockCountResponse:
      description: "Response containing a list of pharmacies with the requested drug package in stock,
      a list of pharmacies for which stock status could not be retrieved and back order status of the
      requested drug package at its distributors"
      type: object
      required:
        - pharmaciesWithStock
        - pharmaciesUnknownStock
        - backOrderStatus
      properties:
        pharmaciesWithStock:
          description: List of pharmacies where the requested drug package is in stock.
          type: array
          maxItems: 5
          items:
            $ref: "#/components/schemas/PharmacyDTO"
        pharmaciesUnknownStock:
          description: List of pharmacies where the request for stock status failed.
          type: array
          items:
            $ref: "#/components/schemas/PharmacyDTO"
        backOrderStatus:
          description: List of distributors and whether or not the requested drug package is back order with them
          type: array
          items:
            $ref: "#/components/schemas/DistributorBackOrderDTO"
    PharmacyDTO:
      type: object
      description: Information about a pharmacy
      required:
        - pharmacyNumber
        - name
        - address
        - zip
        - city
        - phone
        - email
      properties:
        pharmacyNumber:
          description: 5-digit pharmacy number of the pharmacy
          type: string
          maxLength: 5
          pattern: "^\\d{5}$"
          example: "13200"
        name:
          description: Name of the pharmacy
          type: string
          maxLength: 100
          example: "Aarhus Jernbane Apotek"
        address:
          description: Street address of the pharmacy
          type: string
          maxLength: 100
          example: "Banegårdspladsen 8"
        zip:
          description: Zip code of the pharmacy
          type: string
          maxLength: 4
          pattern: "^\\d{4}$"
          example: "8000"
        city:
          description: City of the pharmacy
          type: string
          maxLength: 100
          example: "Aarhus C"
        phone:
          description: Phone of the pharmacy
          type: string
          maxLength: 8
          pattern: "^\\d{8}$"
          example: "86120244"
        email:
          description: Email of the pharmacy
          type: string
          maxLength: 100
          example: "jernbane@apoteket.dk"
    DistributorBackOrderDTO:
      description: A distributor and whether or not a specific drug package is back ordered with them
      type: object
      required:
        - name
        - backOrdered
      properties:
        name:
          description: Name of the distributor
          type: string
          maxLength: 50
          enum:
            - NOMECO
            - TMJ
          example: "NOMECO"
        backOrdered:
          description: Whether or not the drug package in question is back ordered with this distributor
          type: boolean
          example: false
    ConfigurationsResponse:
      type: array
      items:
        $ref: "#/components/schemas/PharmacyConfigurationDTO"
    PharmacyConfigurationDTO:
      description: Information about a pharmacy and its configuration and participation status
      type: object
      required:
        - pharmacy
        - appParticipant
        - appStockParticipant
        - aspStockParticipant
      properties:
        pharmacy:
          $ref: "#/components/schemas/PharmacyDTO"
        appParticipant:
          description: Whether this pharmacy participates in the app or not
          type: boolean
          example: true
        appStockParticipant:
          description: Whether this pharmacy allows app users to query its stock
          type: boolean
          example: true
        aspStockParticipant:
          description: Whether this pharmacy allows other pharmacies to query its stock
          type: boolean
          example: true