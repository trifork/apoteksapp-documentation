openapi: 3.0.1
info:
  title: Apoteksapp Backend Pharmacy API
  description: Apoteksapp Backend Pharmacy API
  version: "0.7"
servers:
  - url: http://localhost:8086
    description: Generated server url
tags:
  - name: pharmacy
    description: ASP Pharmacy API
paths:
  /api/v1/pharmacy/{pharmacyNumber}/getorders:
    post:
      tags:
        - pharmacy
      summary: Get orders
      description: Fetches a list of orders for the specified CPR
      operationId: getOrders
      parameters:
        - name: createdSince
          in: query
          description: Only include orders created since the specified time
          required: false
          schema:
            type: string
            format: date-time
          example: 2020-06-21T01:23:45.123Z
        - name: limit
          in: query
          description: "Max number of results (max 50, default 10)"
          required: false
          schema:
            type: integer
            format: int32
            default: 10
          example: 5
        - name: orderStatus
          in: query
          description: Only include orders with the specified status
          required: false
          schema:
            type: string
            enum:
              - PENDING
              - APPROVED
              - PACKAGED
              - READY_FOR_PICKUP
              - SENT
              - DELIVERED
              - CANCELLED
          example: READY_FOR_PICKUP
        - name: pharmacyNumber
          in: path
          description: 5-digit pharmacy number
          required: true
          schema:
            type: string
          example: "00300"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CPRDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "403":
          description: Missing rights to make requests regarding
            the specified pharmacy number or the specified pharmacy does not have
            rights to make requests regarding the specified CPR
  /api/v1/pharmacy/{pharmacyNumber}/getuserconsent:
    post:
      tags:
        - pharmacy
      summary: Get user consents
      description: Fetches a list of the consents that the specified user has accepted
      operationId: getConsent
      parameters:
        - name: pharmacyNumber
          in: path
          description: 5-digit pharmacy number
          required: true
          schema:
            type: string
          example: "00300"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CPRDTO'
        required: true
      responses:
        "200":
          description: The fetched consents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentsDTO'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "403":
          description: Missing rights to make requests regarding
            the specified pharmacy number or the specified pharmacy does not have
            rights to make requests regarding the specified CPR
  /api/v1/pharmacy/{pharmacyNumber}/getuserinfo:
    post:
      tags:
        - pharmacy
      summary: Get user information
      description: Fetches information about a user and their use of the app
      operationId: getUserInfo
      parameters:
        - name: includeConsent
          in: query
          description: Include consents that the user has agreed to
          required: false
          schema:
            type: boolean
            default: false
          example: true
        - name: pharmacyNumber
          in: path
          description: 5-digit pharmacy number
          required: true
          schema:
            type: string
          example: "00300"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CPRDTO'
        required: true
      responses:
        "200":
          description: The fetched information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoDTO'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "403":
          description: Missing rights to make requests regarding
            the specified pharmacy number or the specified pharmacy does not have
            rights to make requests regarding the specified CPR
  /api/v1/pharmacy/{pharmacyNumber}/order/{orderId}:
    put:
      tags:
        - pharmacy
      summary: Update order
      description: Updates the status of the specified order
      operationId: updateOrderStatus
      parameters:
        - name: orderId
          in: path
          description: Order ID
          required: true
          schema:
            type: string
          example: 1234
        - name: pharmacyNumber
          in: path
          description: 5-digit pharmacy number
          required: true
          schema:
            type: string
          example: "00300"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusDTO'
        required: true
      responses:
        "204":
          description: OK
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "403":
          description: Missing rights to make requests regarding
            the specified pharmacy number or the specified pharmacy does not have
            rights to make requests regarding the specified order ID
components:
  schemas:
    ApiError:
      required:
        - errorCode
        - message
      type: object
      properties:
        errorCode:
          type: string
          description: An identifiable error code
          example: APP_100
        message:
          type: string
          description: A description of the error
          example: Invalid format of id
    CPRDTO:
      required:
        - cpr
      type: object
      properties:
        cpr:
          pattern: "^\\d{10}$"
          type: string
          description: CPR of the citizen (no dash)
          example: "1507502756"
    ConsentDTO:
      required:
        - consentDateTime
        - fullConsentText
        - heading
        - id
      type: object
      properties:
        id:
          maxLength: 50
          type: string
          description: ID of the consent
          example: ST-12
        heading:
          maxLength: 50
          type: string
          description: Heading of the consent
          example: Your privacy
        fullConsentText:
          maxLength: 65535
          type: string
          description: The contents of the consent
          example: ' I hereby give my permission to...'
        consentDateTime:
          type: string
          description: The point in time at which the citizen gave their consent
          format: date-time
          example: 2020-10-22T09:35:00Z
      description: A list of accepted consents
    ConsentsDTO:
      required:
        - consents
      type: object
      properties:
        consents:
          type: array
          description: A list of accepted consents
          items:
            $ref: '#/components/schemas/ConsentDTO'
    DeliveryInformation:
      required:
        - deliveryType
      type: object
      properties:
        deliveryType:
          type: string
          description: Type of the delivery
          enum:
            - GLS
            - GLS_TO_DOOR
            - POSTNORD
            - POSTNORD_TO_DOOR
            - PHARMACY_DELIVERY
            - PHARMACY_PICKUP
            - DELIVERY_LOCATION_PICKUP
        deliveryPrice:
          type: integer
          description: Price of delivery in Ã¸rer (1/100 DKK)
          format: int64
          example: 1500
        parcelShopNumber:
          maxLength: 20
          type: string
          description: ID of the pick-up-point
          example: "96606"
        deliveryAddress:
          maxLength: 100
          type: string
          description: Address of the recipient without city and zip
          example: Private road 42
        deliveryZip:
          maxLength: 10
          type: string
          description: Zip/postcode of the recipient
          example: "4200"
        deliveryCity:
          maxLength: 100
          type: string
          description: City of the recipient
          example: Bysted
      description: Information regarding the delivery of the order
    GetOrdersResponse:
      required:
        - orders
      type: object
      properties:
        orders:
          type: array
          description: List of orders
          items:
            $ref: '#/components/schemas/Order'
    Order:
      required:
        - deliveryInformation
        - email
        - orderEntries
        - orderId
        - orderStatus
        - paymentMethod
        - phoneNumber
      type: object
      properties:
        email:
          maxLength: 100
          type: string
          description: Email-address
          example: me@mydomain.com
        phoneNumber:
          maxLength: 12
          type: string
          description: Phone number
          example: +45 33767600
        orderId:
          maxLength: 20
          type: string
          description: ID of the order
          example: "1234"
        orderEntries:
          type: array
          description: Individual packages in the order
          items:
            $ref: '#/components/schemas/OrderEntry'
        orderStatus:
          type: string
          description: Status of the order
          example: SENT
          enum:
            - PENDING
            - APPROVED
            - PACKAGED
            - READY_FOR_PICKUP
            - SENT
            - DELIVERED
            - CANCELLED
        paymentMethod:
          type: string
          description: Method by which the order was paid
          example: BY_AGREEMENT
          enum:
            - BY_AGREEMENT
            - BY_PICKUP
        deliveryInformation:
          $ref: '#/components/schemas/DeliveryInformation'
      description: List of orders
    OrderEntry:
      required:
        - fmkOrderId
        - packageCount
        - packageNumber
      type: object
      properties:
        fmkOrderId:
          maxLength: 20
          type: integer
          description: ID of the order in FMK
          format: int64
          example: 1234
        packageNumber:
          maxLength: 6
          type: integer
          description: Package number of the product
          format: int64
          example: 504878
        packageCount:
          maxLength: 10
          type: integer
          description: Quantity of the specified package number
          format: int64
          example: 1
      description: Individual packages in the order
    UpdateOrderStatusDTO:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: New order status
          example: CANCELLED
          enum:
            - PENDING
            - APPROVED
            - PACKAGED
            - READY_FOR_PICKUP
            - SENT
            - DELIVERED
            - CANCELLED
        statusRemark:
          maxLength: 100
          type: string
          description: Comment about the order status.
          example: Cancelled by citizen' request
    UserInfoDTO:
      required:
        - appUser
        - favouritePharmacy
      type: object
      properties:
        appUser:
          type: boolean
          description: Whether the citizen is a registered user of the app or not
          example: true
        favouritePharmacy:
          type: string
          description: YES if the user has marked the requesting pharmacy as their
            favourite. NO if the user does not have a favourite pharmacy. OTHER if
            the user has another pharmacy marked as their favourite
          example: "YES"
          enum:
            - "YES"
            - "NO"
            - OTHER
        favouritePharmacyNumber:
          maxLength: 5
          type: string
          description: Pharmacy number of the pharmacy that the user has marked as
            their favourite. Only present if favouritePharmacy is YES.
          example: "00300"
        consentList:
          type: array
          description: A list of accepted consents
          items:
            $ref: '#/components/schemas/ConsentDTO'
