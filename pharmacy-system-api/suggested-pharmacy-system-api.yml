openapi: 3.0.1
info:
  title: Pharmacy System API
  description: Suggested API for Pharmacy System providers to implement.
  version: "1.1"
  contact:
    name: Trifork
tags:
  - name: pharmacy
    description: Operations related to a specific pharmacy
  - name: drug-package
    description: Operations related to drug packages
security:
  - basicAuth: [ ]
paths:
  /api/v1/pharmacy/{pharmacyNumber}/payment-agreement:
    post:
      tags:
        - pharmacy
      summary: Get payment agreement
      description: "Fetch a user's existing payment agreement, if it exists"
      operationId: getPaymentAgreement
      parameters:
        - name: pharmacyNumber
          in: path
          description: Pharmacy number
          required: true
          schema:
            type: string
          example: "02400"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAgreementRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAgreementResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "404":
          description: Not found
  /api/v1/pharmacy/{pharmacyNumber}/payment-agreement/create:
    post:
      tags:
        - pharmacy
      summary: Request a payment agreement creation URL
      description: Request a URL that can be used by the user to create a new payment
        agreement
      operationId: createPaymentAgreementURL
      parameters:
        - name: pharmacyNumber
          in: path
          description: Pharmacy number
          required: true
          schema:
            type: string
          example: "02400"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentAgreementRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentAgreementResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "404":
          description: Not found
  /api/v1/pharmacy/{pharmacyNumber}/prices:
    post:
      deprecated: true
      tags:
        - pharmacy
      summary: Look up prices for a specific citizen
      description: "Given one or more package numbers, returns the price for each.\
        \ The price can also take into account the specified citizen's CTR balance"
      operationId: getCitizenSpecificPrices
      parameters:
        - name: pharmacyNumber
          in: path
          description: Pharmacy number
          required: true
          schema:
            type: string
          example: "02400"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitizenSpecificPricesRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitizenSpecificPricesResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "404":
          description: Not found
  /api/v1/pharmacy/{pharmacyNumber}/prices-v2:
    post:
      tags:
        - pharmacy
      operationId: getCitizenSpecificPricesV2
      summary: Look up prices for a specific citizen
      description: Given one or more package contexts, returns price specifications for each.
      parameters:
        - name: pharmacyNumber
          in: path
          description: Pharmacy number
          required: true
          schema:
            type: string
          example: "02400"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitizenSpecificPricesRequestV2'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitizenSpecificPricesResponseV2'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /api/v1/pharmacy/{pharmacyNumber}/stockcount:
    post:
      tags:
        - pharmacy
      summary: Look up stock count
      description: "Given one or more package numbers, returns the stock count for\
        \ each"
      operationId: getStockCount
      parameters:
        - name: pharmacyNumber
          in: path
          description: Pharmacy number
          required: true
          schema:
            type: string
          example: "02400"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockCountRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockCountResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "404":
          description: Not found
  /api/v1/drug-package/{packageNumber}/stockcount:
    post:
      tags:
        - drug-package
      operationId: getDrugPackageStockCount
      summary: Look up stock count for a specific drug package
      description: "Find the stock count for a specific drug package on a set of pharmacies provided in the request. If one
      of the provided pharmacies is missing from the response it means that the pharmacy does not exist."
      parameters:
        - name: packageNumber
          in: path
          description: Package number
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 999999
          example: 522003
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrugPackageStockCountRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrugPackageStockCountDictionary'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "501":
          description: Not Implemented
components:
  schemas:
    ApiError:
      required:
        - errorCode
        - message
      type: object
      properties:
        errorCode:
          type: string
          description: An identifiable error code
          example: APP_100
        message:
          type: string
          description: A description of the error
          example: Invalid format of id
    CitizenSpecificPricesRequest:
      required:
        - cpr
        - includeCtrContribution
        - packages
        - totalPurchase
      type: object
      properties:
        includeCtrContribution:
          type: boolean
          description: Indicates whether the returned prices should take the citizen's
            CTR balance into account
          example: true
        totalPurchase:
          type: boolean
          description: Indicates whether the items included in packages should be
            seen as a total purchase or not
          example: true
        cpr:
          pattern: "^\\d{10}$"
          type: string
          description: CPR of the citizen (no dash)
          example: "1507502756"
        packages:
          type: array
          description: List of package numbers and the quantity of each
          items:
            $ref: '#/components/schemas/Package'
    CitizenSpecificPricesRequestV2:
      type: object
      required:
        - cpr
        - isTotalPurchase
        - packageContexts
      properties:
        cpr:
          type: string
          pattern: "^\\d{10}$"
          description: CPR of the citizen (no dash)
          example: "1507502756"
        isTotalPurchase:
          type: boolean
          description: "Indicates whether the package contexts should be seen as a total purchase or as separate
          purchases. This parameter only affects the reimbursement calculation and not the price."
          example: true
        packageContexts:
          type: array
          items:
            $ref: '#/components/schemas/PackageContext'
    CitizenSpecificPricesResponse:
      required:
        - ctrBalance
        - prices
      type: object
      properties:
        ctrBalance:
          type: integer
          description: CTR balance in ører (1/100 DKK)
          format: int64
          example: 13195
        ctrPeriodEndDate:
          type: string
          description: Date when the current CTR period ends. Can be null if the user has no current balance.
          format: date
          example: 2020-09-14
        prices:
          type: array
          description: Price specification of the individual packages
          items:
            $ref: '#/components/schemas/PriceSpecification'
    CitizenSpecificPricesResponseV2:
      required:
        - ctrBalance
        - prices
      type: object
      properties:
        ctrBalance:
          type: integer
          format: int64
          description: CTR balance in ører (1/100 DKK)
          example: 13195
        ctrPeriodEndDate:
          type: string
          format: date
          description: Date when the current CTR period ends. Is required if the citizen has a CTR balance.
          example: 2020-09-14
        prices:
          type: array
          description: List of price specifications for the package contexts
          items:
            $ref: '#/components/schemas/PriceSpecificationV2'
    CreatePaymentAgreementRequest:
      required:
        - cpr
        - email
      type: object
      properties:
        cpr:
          pattern: "^\\d{10}$"
          type: string
          description: CPR of the citizen (no dash)
          example: "1507502756"
        email:
          type: string
          description: Email
          example: me@mydomain.com
        phone:
          type: string
          description: Phone number
          example: "12345678"
    CreatePaymentAgreementResponse:
      required:
        - agreementDisplayName
        - agreementSystemName
        - url
      type: object
      properties:
        url:
          type: string
          description: URL for creation of payment agreement
          example: https://create.paymentagreement.com
        agreementSystemName:
          type: string
          description: Machine-readable name of the payment agreement
          example: farpay
        agreementDisplayName:
          type: string
          description: Human-readable name of the payment agreement
          example: Farpay betalingsaftale
    Package:
      required:
        - packageNumber
        - quantity
      type: object
      properties:
        packageNumber:
          type: integer
          description: Package number
          format: int32
          example: 522003
        quantity:
          type: integer
          description: The quantity of the specified package number
          format: int32
      description: List of package numbers and the quantity of each
    PackageContext:
      type: object
      description: A specific package context with an identifier provided by a request
      required:
        - packageContextIdentifier
        - packageNumber
        - quantity
        - reimbursementClauseFulfilled
      properties:
        packageContextIdentifier:
          type: string
          format: uuid
          description: UUID that is used to match the package context in a response
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        packageNumber:
          type: integer
          format: int32
          description: Package number
          example: 522003
        quantity:
          type: integer
          format: int32
          description: The quantity of the specified package number
          example: 2
        reimbursementClauseFulfilled:
          type: boolean
          description: Indicates if a clause for reimbursement is fulfilled
          example: false
    PaymentAgreementRequest:
      required:
        - cpr
      type: object
      properties:
        cpr:
          pattern: "^\\d{10}$"
          type: string
          description: CPR of the citizen (no dash)
          example: "1507502756"
    PaymentAgreementResponse:
      required:
        - hasAgreement
      type: object
      properties:
        hasAgreement:
          type: boolean
          description: Indicates whether or not the user has a payment agreement
          example: true
        agreementSystemName:
          type: string
          description: Machine-readable name of the payment agreement
          example: farpay
        agreementDisplayName:
          type: string
          description: Human-readable name of the payment agreement
          example: Farpay betalingsaftale
    PriceSpecification:
      required:
        - packageNumber
        - price
      type: object
      properties:
        packageNumber:
          type: integer
          description: Package number
          format: int32
          example: 522003
        price:
          type: integer
          description: CTR adjusted price in ører (1/100 DKK)
          format: int64
          example: 3195
        ctrContribution:
          type: integer
          description: CTR contribution in ører (1/100 DKK). Can be null if the amount cannot be calculated in advance.
          format: int64
          example: 600
      description: Price specification of the individual packages
    PriceSpecificationV2:
      type: object
      description: Price specification for a specific package context as defined by a request
      required:
        - packageContextIdentifier
        - packageContext
        - price
      properties:
        packageContextIdentifier:
          type: string
          format: uuid
          description: UUID that corresponds to a package context in a request
          example: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
        price:
          type: integer
          format: int64
          description: Gross price in ører (1/100 DKK) (not including any reimbursement)
          example: 3195
        reimbursement:
          type: integer
          format: int64
          description: "Calculated reimbursement in ører (1/100 DKK). Is required if the amount can be calculated (to
          some extend) in advance and must be `0` if the citizen does not qualify for any reimbursement."
          example: 600
    StockCount:
      required:
        - packageNumber
        - stockCount
      type: object
      properties:
        packageNumber:
          type: integer
          description: Package number
          format: int32
          example: 522003
        stockCount:
          type: integer
          description: The quantity of the given package number currently in stock
          format: int32
          example: 12
    StockCountRequest:
      required:
        - packageNumbers
      type: object
      properties:
        packageNumbers:
          type: array
          description: List of package numbers
          items:
            type: integer
            description: List of package numbers
            format: int32
    StockCountResponse:
      required:
        - stockCounts
      type: object
      properties:
        stockCounts:
          type: array
          items:
            $ref: '#/components/schemas/StockCount'
    DrugPackageStockCountRequest:
      type: object
      required:
        - requestingActor
        - pharmacyNumbers
      properties:
        requestingActor:
          type: string
          description: The type of actor that is requesting the information.
          enum:
            - APP_USER
            - PHARMACY
          example: APP_USER
        pharmacyNumbers:
          type: array
          description: Pharmacy numbers for which stock counts are requested.
          items:
            type: string
            pattern: "^\\d{5}$"
          uniqueItems: true
          example: ["02400", "80400"]
    DrugPackageStockCountDictionary:
      type: object
      description: A dictionary containing the pharmacy number as key and the number of items in stock as value.
      additionalProperties:
        type: integer
      example:
        "02400": 2
        "80400": 5
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic